### EKF Configuration for Sensor Fusion
### Fuses wheel odometry (/odom) with IMU data (/imu/data) to correct for wheel slippage
### Outputs fused odometry on /odometry/filtered
### UPDATED: Uses full 9-DOF IMU with proper unit conversion (rad/s, m/sÂ²)

ekf_filter_node:
  ros__parameters:
    # Frequency at which the filter publishes (Hz)
    # Set to 20Hz for responsive updates while not overloading Pi
    frequency: 20.0

    # The filter can operate in 2D (false) or 3D (true) mode
    # For differential drive on flat ground, 2D is appropriate
    two_d_mode: true

    # Transform publication settings
    publish_tf: true
    publish_acceleration: false

    # Predict to current time to reduce latency
    predict_to_current_time: true

    # Map frame name (for localization/SLAM integration)
    map_frame: map
    odom_frame: odom
    base_link_frame: base_link
    world_frame: odom # For odometry-only fusion (not SLAM localization)

    # ---------------------------------------------
    # Input Source 1: Wheel Odometry (/odom)
    # ---------------------------------------------
    odom0: /odom
    odom0_config: [
        false,
        false,
        false, # x, y, z position (DISABLED - let EKF integrate from velocities only!)
        false,
        false,
        false, # roll, pitch, yaw orientation (DISABLED - use IMU orientation instead)
        true,
        true,
        false, # x_vel, y_vel, z_vel (USE wheel velocities - this is the ONLY encoder data we trust)
        false,
        false,
        true, # yaw_vel (CRITICAL: USE encoder angular velocity - drift-free!)
        false,
        false,
        false, # x_accel, y_accel, z_accel
      ]
    odom0_queue_size: 2 # Reduced from 10 to minimize processing
    odom0_differential: false # Velocities are inherently differential
    odom0_relative: false

    # ---------------------------------------------
    # Input Source 2: IMU (/imu/data) - Full 9-DOF
    # ---------------------------------------------
    imu0: /imu/data
    # UPDATED: Disable angular velocity and acceleration - they cause drift!
    # Use ONLY orientation from DMP (most reliable)
    imu0_config: [
        false,
        false,
        false, # x, y, z position (IMU doesn't provide position)
        true,
        true,
        true, # roll, pitch, yaw orientation (USE DMP - very stable and drift-free)
        false,
        false,
        false, # x_vel, y_vel, z_vel (not provided by IMU)
        false,
        false,
        false, # roll_vel, pitch_vel, yaw_vel (DISABLED - raw gyro causes drift!)
        false,
        false,
        false, # x_accel, y_accel, z_accel (DISABLED - too noisy, causes position drift)
      ]
    imu0_queue_size: 5 # Slightly larger to smooth bursts
    imu0_differential: false
    imu0_relative: false

    # CRITICAL: Tell EKF which frame the IMU is in
    # Must match the frame_id in Imu messages and static TF
    # Using base_link since IMU is rigidly mounted to the base
    imu0_frame_id: imu_link

    # Remove gravitational acceleration from IMU linear accel before fusion
    # This helps isolate actual robot motion from gravity
    imu0_remove_gravitational_acceleration: true

    # Measurement covariances - tune these to balance trust between sensors
    # CRITICAL FOR DRIFT PREVENTION:
    # - Orientation covariance REDUCED (DMP is very stable)
    # - Gyro/Accel covariances NOT USED (disabled above to prevent drift)
    imu0_orientation_covariance: [
        0.001,
        0.0,
        0.0,
        0.0,
        0.001,
        0.0,
        0.0,
        0.0,
        0.002,
      ] # DMP orientation is excellent - trust it!

    # These are not used since gyro/accel are disabled, but keep for reference
    imu0_angular_velocity_covariance: [
        0.1,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.1,
      ] # High values = low trust

    imu0_linear_acceleration_covariance: [
        1.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        1.0,
      ] # High values = low trust

    # ---------------------------------------------
    # Process Noise Covariance
    # ---------------------------------------------
    # How much we expect the state to change between measurements
    # Tune these if the filter is too "jumpy" (decrease) or too "sluggish" (increase)
    process_noise_covariance: [
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # x
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # y
        0.0,
        0.0,
        0.06,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # z
        0.0,
        0.0,
        0.0,
        0.03,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # roll
        0.0,
        0.0,
        0.0,
        0.0,
        0.03,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # pitch
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.06,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # yaw
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.025,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # x_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.025,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # y_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.04,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # z_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.01,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0, # roll_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.01,
        0.0,
        0.0,
        0.0,
        0.0, # pitch_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.02,
        0.0,
        0.0,
        0.0, # yaw_vel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.01,
        0.0,
        0.0, # x_accel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.01,
        0.0, # y_accel
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.015, # z_accel
      ]

    # ---------------------------------------------
    # Initial State Covariance
    # ---------------------------------------------
    initial_estimate_covariance:
      [
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1e-9,
      ]
